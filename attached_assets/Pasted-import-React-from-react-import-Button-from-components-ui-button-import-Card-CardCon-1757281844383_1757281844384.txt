import React from "react";
import { Button } from "@/components/ui/button";
import { Card, CardContent } from "@/components/ui/card";
import { Avatar, AvatarFallback, AvatarImage } from "@/components/ui/avatar";
import { Badge } from "@/components/ui/badge";

type Attendee = {
  member_id: string;
  name: string;
  company?: string;
  headline?: string;
  avatar_url?: string;
  match_score?: number; // 0..1
  overlap_tags?: string[];
  actions?: {
    profile_url: string;
    message_url: string;
    sync_url: string;
  };
};

interface AttendeeCardProps {
  attendee: Attendee;
  onViewProfile?: (memberId: string) => void;
  onMessage?: (memberId: string) => void;
  onScheduleSync?: (memberId: string) => void;
}

export const AttendeeCard: React.FC<AttendeeCardProps> = ({
  attendee,
  onViewProfile,
  onMessage,
  onScheduleSync,
}) => {
  return (
    <Card className="w-full mb-3 border rounded-xl shadow-sm hover:shadow-md transition">
      <CardContent className="flex items-start gap-4 p-4">
        {/* Avatar */}
        <Avatar className="h-12 w-12">
          <AvatarImage src={attendee.avatar_url} alt={attendee.name} />
          <AvatarFallback>
            {attendee.name.charAt(0).toUpperCase()}
          </AvatarFallback>
        </Avatar>

        {/* Main Info */}
        <div className="flex-1 min-w-0">
          <div className="flex items-center justify-between mb-1">
            <h3 className="font-semibold text-base truncate">
              {attendee.name}
            </h3>
            {attendee.match_score !== undefined && (
              <Badge variant="secondary">
                Sync Score {Math.round(attendee.match_score * 100)}
              </Badge>
            )}
          </div>
          <p className="text-sm text-gray-600 truncate">
            {attendee.headline || attendee.company || "Member"}
          </p>

          {/* Overlap Tags */}
          {attendee.overlap_tags && attendee.overlap_tags.length > 0 && (
            <div className="flex flex-wrap gap-1 mt-2">
              {attendee.overlap_tags.slice(0, 3).map((tag) => (
                <Badge key={tag} variant="outline" className="text-xs">
                  {tag}
                </Badge>
              ))}
            </div>
          )}

          {/* Quick Actions */}
          <div className="flex gap-2 mt-3">
            <Button
              size="sm"
              variant="outline"
              onClick={() => onViewProfile?.(attendee.member_id)}
            >
              View
            </Button>
            <Button
              size="sm"
              variant="secondary"
              onClick={() => onMessage?.(attendee.member_id)}
            >
              Message
            </Button>
            <Button
              size="sm"
              onClick={() => onScheduleSync?.(attendee.member_id)}
            >
              Sync
            </Button>
          </div>
        </div>
      </CardContent>
    </Card>
  );
};
